apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: dev-nest
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/part-of: devops-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/part-of: devops-test
    spec:
      securityContext:
        runAsNonRoot: false   # Redis требует root внутри контейнера
      containers:
        - name: redis
          image: redis:7
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: 6379
          # включаем пароль через requirepass
          args: ["redis-server", "--appendonly", "yes", "--requirepass", "$(REDIS_PASSWORD)"]
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: REDIS_PASSWORD
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: dev-nest
  labels:
    app.kubernetes.io/name: redis
spec:
  type: ClusterIP
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
  selector:
    app.kubernetes.io/name: redis
