name: CI/CD

on:
  push:
    branches: [ "main", "master", "dev" ]
  pull_request:

env:
  IMAGE_NAME: ${{ secrets.REGISTRY }}   # ghcr.io/merega/devops-test
  K8S_NAMESPACE: dev-nest

name: CI/CD

on:
  push:
    branches: [ "main", "master", "dev" ]
  pull_request:

env:
  IMAGE_NAME: ${{ secrets.REGISTRY }}   # ghcr.io/merega/devops-test
  K8S_NAMESPACE: dev-nest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: ghcr.io

      - name: Extract metadata (labels only)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Shorten SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ env.SHORT_SHA }}
            ${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Show image info
        run: echo "Built and pushed image: ${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ env.SHORT_SHA }}"

#  deploy:
#    if: false
#    needs: build-and-push
#    if: github.ref_name == 'main' || github.ref_name == 'master' || github.ref_name == 'dev'
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Setup kubectl
#        uses: azure/setup-kubectl@v4
#        with:
#          version: 'v1.30.0'
#
#      - name: Write kubeconfig
#        run: |
#          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
#          kubectl config set-context --current --namespace=${{ env.K8S_NAMESPACE }}
#
#      - name: Set image in manifest and deploy
#        run: |
#          IMG="${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.img.IMAGE_TAG || 'latest' }}"
#          sed -i "s|REPLACE_WITH_REGISTRY_IMAGE|${IMG}|g" k8s/04-app.yaml
#          kubectl apply -f k8s/00-namespace.yaml || true
#          kubectl apply -f k8s/01-configmap.yaml
#          kubectl apply -f k8s/03-redis.yaml
#          kubectl apply -f k8s/04-app.yaml
#          kubectl apply -f k8s/05-hpa.yaml
#          kubectl apply -f k8s/06-networkpolicy.yaml
#          # kubectl apply -f k8s/07-servicemonitor.optional.yaml   # если используете Operator
#
#      - name: Verify rollout
#        run: kubectl rollout status deploy/nestjs-app --timeout=120s
